//@ui5-bundle sap/ui/demo/todo/Component-preload.js
sap.ui.require.preload({
	"sap/ui/demo/todo/Component.js":function(){
sap.ui.define(["sap/ui/core/UIComponent","sap/ui/core/ComponentSupport"],e=>{"use strict";return e.extend("sap.ui.demo.todo.Component",{metadata:{manifest:"json",interfaces:["sap.ui.core.IAsyncContentCreation"]}})});
},
	"sap/ui/demo/todo/controller/App.controller.js":function(){
sap.ui.define(["sap/ui/Device","sap/ui/core/mvc/Controller","sap/ui/model/Filter","sap/ui/model/FilterOperator","sap/ui/model/json/JSONModel","sap/base/strings/formatMessage","sap/ui/demo/todo/util/Helper","sap/m/MessageToast","sap/m/Dialog","sap/ui/layout/form/SimpleForm"],(e,t,o,s,i,a,r,n,l,c)=>{"use strict";return t.extend("sap.ui.demo.todo.controller.App",{onInit(){this.formatter=r;this.aSearchFilters=[];this.aTabFilters=[];e.resize.attachHandler(this._onDeviceResize,this);const t=new i;this.getView().setModel(t,"view");this.getOwnerComponent().getModel().dataLoaded().then(()=>{this._updateCardData()})},removeCompletedTodos(e){let t=e.length;while(t--){const o=e[t];if(o.completed){e.splice(t,1)}}},onDeleteItem(e){const t=e.getSource().getBindingContext();const o=t.getPath();const s=parseInt(o.split("/").pop(),10);if(!this._oConfirmDialog){this._oConfirmDialog=new sap.m.Dialog({title:"Confirmação",type:"Message",content:new sap.m.Text({text:"Tem certeza que deseja excluir esta tarefa?"}),beginButton:new sap.m.Button({text:"Sim",type:"Emphasized",press:function(){this._deleteTask(s);this._oConfirmDialog.close()}.bind(this)}),endButton:new sap.m.Button({text:"Não",press:function(){this._oConfirmDialog.close()}.bind(this)}),afterClose:function(){}.bind(this)});this.getView().addDependent(this._oConfirmDialog)}else{this._oConfirmDialog.getBeginButton().detachPress();this._oConfirmDialog.getBeginButton().attachPress(function(){this._deleteTask(s);this._oConfirmDialog.close()}.bind(this))}this._oConfirmDialog.open()},_deleteTask:function(e){const t=this.getModel();const o=t.getProperty("/todos");o.splice(e,1);t.setProperty("/todos",o);this._updateCardData()},_updateCardData(){const e=this.getOwnerComponent().getModel();const t=e.getProperty("/todos")||[];const o=e.getProperty("/itemsCount")||0;const s=this.getView().getModel("view");let i=0;let a=0;let r=0;const n=new Date;n.setHours(0,0,0,0);const l=new Date(n);l.setDate(l.getDate()+1);const c=new Date(l);c.setDate(c.getDate()+1);t.forEach(e=>{if(!e.completed){const t=new Date(e.date);t.setHours(0,0,0,0);if(t.getTime()<n.getTime()){i++}else if(t.getTime()>=n.getTime()&&t.getTime()<l.getTime()){a++}else if(t.getTime()>=l.getTime()&&t.getTime()<c.getTime()){r++}}});const d={overdue:{title:"Atrasadas",number:i,icon:"sap-icon://alert",iconColor:"Negative",subtitle:"Tarefas vencidas"},today:{title:"Para Hoje",number:a,icon:"sap-icon://calendar",iconColor:"Neutral",subtitle:"Tarefas a vencerem hoje"},tomorrow:{title:"Para Amanhã",number:r,icon:"sap-icon://date-time",iconColor:"Positive",subtitle:"Tarefas para o próximo dia"}};s.setProperty("/cardData",d);s.setProperty("/all",o);console.log(o)},getModel(){return this.getView().getModel()},onPress(){try{const e=this.getModel();const t=e.getProperty("/newTask");const o=e.getProperty("/newTpPriority");const s=e.getProperty("/dateDelivery");if(!t){n.show("Necesário informar uma Tarefa.");return}if(!s){n.show("Necesário informar uma Data.");return}if(!o){n.show("Necesário informar um Tipo.");return}const i=this.getTodos().map(e=>Object.assign({},e));console.log(o);i.push({task:t,TpPriority:o,date:s,completed:false});e.setProperty("/todos",i);e.setProperty("/newTask","");e.setProperty("/newTpPriority","");e.setProperty("/dateDelivery","");console.log(i);e.setProperty("/nagali","0");n.show("Tarefa Adicionada");this._updateCardData()}catch(e){console.log(e)}},formatDate:function(e){if(!e)return"";const t=e.split("/");const o=t[0].padStart(2,"0");const s=t[1].padStart(2,"0");const i=t[2].length===2?"20"+t[2]:t[2];return`${s}/${o}/${i}`},onClearCompleted(){const e=this.getTodos().map(e=>Object.assign({},e));this.removeCompletedTodos(e);this.getModel().setProperty("/todos",e);this._updateCardData()},getTodos(){const e=this.getModel();return e&&e.getProperty("/todos")||[]},onUpdateItemsLeftCount(){const e=this.getTodos().filter(e=>e.completed!==true).length;this.getModel().setProperty("/itemsLeftCount",e);this._updateCardData()},onSearch(e){const t=this.getModel();this.aSearchFilters=[];this.sSearchQuery=e.getSource().getValue();if(this.sSearchQuery&&this.sSearchQuery.length>0){t.setProperty("/itemsRemovable",false);const e=new o("task",s.Contains,this.sSearchQuery);this.aSearchFilters.push(e)}else{t.setProperty("/itemsRemovable",true)}this._applyListFilters()},onFilter(e){this.aTabFilters=[];this.sFilterKey=e.getParameter("item").getKey();switch(this.sFilterKey){case"active":this.aTabFilters.push(new o("completed",s.EQ,false));break;case"completed":this.aTabFilters.push(new o("completed",s.EQ,true));break;case"all":default:}this._applyListFilters()},_applyListFilters(){const e=this.byId("todoList");const t=e.getBinding("items");t.filter(this.aSearchFilters.concat(this.aTabFilters),"todos");const o=this.getI18NKey(this.sFilterKey,this.sSearchQuery);this.byId("filterToolbar").setVisible(!!o);if(o){this.byId("filterLabel").bindProperty("text",{path:o,model:"i18n",formatter:e=>a(e,[this.sSearchQuery])})}},onInfoItem(e){const t=e.getSource().getBindingContext();if(!this._oInfoDialog){this._oInfoDialog=new l({title:"Detalhes da Tarefa",contentWidth:"400px",contentHeight:"auto",resizable:true,content:[new c({editable:false,layout:"ResponsiveGridLayout",content:[new sap.m.Label({text:"Tarefa"}),new sap.m.Text({text:"{task}"}),new sap.m.Label({text:"Prioridade"}),new sap.m.Text({text:"{TpPriority}"}),new sap.m.Label({text:"Data"}),new sap.m.Text({text:"{path: 'date', formatter: '.formatDate'}"}),new sap.m.Label({text:"Concluída"}),new sap.m.CheckBox({selected:"{completed}",editable:false})]})],beginButton:new sap.m.Button({text:"Fechar",press:function(){this._oInfoDialog.close()}.bind(this)})});this.getView().addDependent(this._oInfoDialog)}this._oInfoDialog.setBindingContext(t);this._oInfoDialog.open()}})});
},
	"sap/ui/demo/todo/i18n/i18n.properties":'TITLE=todos\nINPUT_PLACEHOLDER=What needs to be done?\nINPUT_PLACEHOLDER_PRIORITY=Prioridade\nCLEAR_COMPLETED=Clear completed\nACTIVE_ITEMS=Active items\nACTIVE_ITEMS_CONTAINING=Active items containing "{0}"\nCOMPLETED_ITEMS=Completed items\nCOMPLETED_ITEMS_CONTAINING=Completed items containing "{0}"\nITEMS_CONTAINING=Items containing "{0}"\nLABEL_ALL=All\nLABEL_ACTIVE=Active\nLABEL_COMPLETED=Completed\ndetailPageTitle=Task Details\ndescription=Description\npriority=Priority\ndueDate=Due Date',
	"sap/ui/demo/todo/i18n/i18n_de.properties":'TITLE=Portal Notas\nINPUT_PLACEHOLDER=Was muss getan werden?\nCLEAR_COMPLETED=Erledigte Eintr\\u00e4ge entfernen\nACTIVE_ITEMS=Aktive Eintr\\u00e4ge\nACTIVE_ITEMS_CONTAINING=Aktive Eintr\\u00e4ge mit "{0}"\nCOMPLETED_ITEMS=Erledigte Eintr\\u00e4ge\nCOMPLETED_ITEMS_CONTAINING=Erledigte Eintr\\u00e4ge mit "{0}"\nITEMS_CONTAINING=Eintr\\u00e4ge mit "{0}"\nLABEL_ALL=Alle\nLABEL_ACTIVE=Aktiv\nLABEL_COMPLETED=Erledigt\ndetailPageTitle=Aufgabendetails\ndescription=Beschreibung\npriority=Priorit\\u00e4t\ndueDate=F\\u00e4lligkeitsdatum\n',
	"sap/ui/demo/todo/i18n/i18n_en.properties":'TITLE=Task Manager\nINPUT_PLACEHOLDER=What needs to be done?\nSEARCH_PLACEHOLDER=What needs to be done?\nCLEAR_COMPLETED=Clear completed\nACTIVE_ITEMS=Active items\nACTIVE_ITEMS_CONTAINING=Active items containing "{0}"\nCOMPLETED_ITEMS=Completed items\nCOMPLETED_ITEMS_CONTAINING=Completed items containing "{0}"\nITEMS_CONTAINING=Items containing "{0}"\nLABEL_ALL=All\nLABEL_ACTIVE=Active\nLABEL_COMPLETED=Completed\ndetailPageTitle=Task Details\ndescription=Description\npriority=Priority\ndueDate=Due Date',
	"sap/ui/demo/todo/manifest.json":'{"_version":"1.61.0","sap.app":{"id":"sap.ui.demo.todo","type":"application","title":"{{appTitle}}","applicationVersion":{"version":"1.0.0"}},"sap.ui":{"technology":"UI5","icons":{"icon":"sap-icon://task","favIcon":"","phone":"","phone@2":"","tablet":"","tablet@2":""},"deviceTypes":{"desktop":true,"tablet":true,"phone":true}},"sap.ui5":{"dependencies":{"minUI5Version":"1.98.0","libs":{"sap.ui.core":{},"sap.m":{},"sap.f":{}}},"rootView":{"viewName":"sap.ui.demo.todo.view.App","type":"XML","id":"app"},"models":{"i18n":{"type":"sap.ui.model.resource.ResourceModel","settings":{"bundleName":"sap.ui.demo.todo.i18n.i18n","async":true}},"":{"type":"sap.ui.model.json.JSONModel","uri":"model/todoitems.json"}},"resources":{"css":[{"uri":"css/styles.css"}]}}}',
	"sap/ui/demo/todo/util/Helper.js":function(){
sap.ui.define(["require"],r=>{"use strict";return{formatPriorityClass(r){switch(r){case"A":return"tpPriorityBoxA";case"M":return"tpPriorityBoxM";case"B":return"tpPriorityBoxB";default:return"tpPriorityBoxB"}},resolvePath(t){return r.toUrl("../")+t}}});
},
	"sap/ui/demo/todo/view/App.view.xml":'<mvc:View\ncontrollerName="sap.ui.demo.todo.controller.App"\nxmlns:mvc="sap.ui.core.mvc"\nxmlns:core="sap.ui.core"\nxmlns="sap.m"\nxmlns:f="sap.f"\nxmlns:l="sap.ui.layout"\nxmlns:form="sap.ui.layout.form"\ndisplayBlock="true"><App autoFocus="false"><Page \n   showHeader="true" \n   backgroundDesign="Solid" \n   enableScrolling="true"   \n   class="sapUiContentPadding"><customHeader><f:ShellBar core:require="{ Helper: \'sap/ui/demo/todo/util/Helper\' }" \n\t\t\t\t\ttitle="{i18n>TITLE}"\n\t\t\t\t\t homeIcon="{:= Helper.resolvePath(\'./img/logo.png\') }" /></customHeader><content><VBox width="100%"><FlexBox\n          \t\t\tjustifyContent="Center"\n          \t\t\talignItems="Center"\n          \t\t\twrap="Wrap"\n          \t\t\tclass="sapUiTinyMarginTopBottom"><items><core:Fragment fragmentName="sap.ui.demo.todo.view.fragment.InfoCard" type="XML" binding="{view>/cardData/overdue}"/><core:Fragment fragmentName="sap.ui.demo.todo.view.fragment.InfoCard" type="XML" binding="{view>/cardData/today}"/><core:Fragment fragmentName="sap.ui.demo.todo.view.fragment.InfoCard" type="XML" binding="{view>/cardData/tomorrow}"/></items></FlexBox><VBox width="100%"><Title text="Suas tarefas" level="H2" titleStyle="H3" class="sapUiMediumMarginTop" /><Text text="Gerencie o que precisa ser feito usando uma UI clara e eficiente." /></VBox><FlexBox  \n      class="listTask sapUiMediumMarginTopBottom" \n      direction="Column"\n      width="100%"><HBox class="sapUiTinyMarginBottom"><core:Icon src="sap-icon://circle-task" color="blue" class="sapUiTinyMarginEnd"/><Title text="Lista de Tarefas" /></HBox><FlexBox\n    id="myFlexBox"\n    alignItems="Center"\n    width="100%"\n    justifyContent="SpaceBetween"\n    class="sapUiTinyMarginBottom containerForm"><Input\n        id="addtaskItemInput"\n        class="roundedInput"\n        maxLength="200"\n        placeholder="O que precisa ser feito?"\n        value="{/newTask}"><layoutData><FlexItemData growFactor="6" /></layoutData></Input><Select\n        selectedKey="{/newTpPriority}"\n        class="roundedInput sapUiSmallMarginBeginEnd"><core:Item key="" text="Selecione" /><core:Item key="B" text="Baixa" /><core:Item key="M" text="Média" /><core:Item key="A" text="Alta" /></Select><DatePicker\n        id="dateDelivery"\n        class="roundedInput sapUiSmallMarginEnd" placeholder="dd/mm/aaaa"\n        value="{/dateDelivery}"><layoutData><FlexItemData growFactor="2" /></layoutData></DatePicker><Button\n        text="Adicionar"\n        icon="sap-icon://add"\n        press=".onPress"\n        type="Emphasized"\n        class="sapUiSmallMarginEnd"><layoutData><FlexItemData growFactor="1" /></layoutData></Button></FlexBox><SegmentedButton selectedKey="all" \n    selectionChange=".onFilter" \n    class="segmentedResponsive sapUiTinyMarginBottom"><items><SegmentedButtonItem width="10rem" text="Todos" key="all" id="all"/><SegmentedButtonItem width="10rem" text="Abertos" key="active" id="active"/><SegmentedButtonItem width="10rem" text="Concluídos" key="completed" id="completed"/></items></SegmentedButton><Select selectedKey="all" \n    class="selectResponsive sapUiTinyMarginBottom"\n    change=".onFilter"><core:Item key="all" text="Todos"/><core:Item key="active" text="Abertos"/><core:Item key="completed" text="Concluídos"/></Select><List\n       id="todoList"\n       items="{/todos}"\n       showSeparators="None"\n       mode="None"\n       class="containerForm"\n       noDataText="Nenhuma tarefa encontrada."><CustomListItem type="Inactive" class=" line noFocusItem" ><HBox \n         class="sapUiSmallPaddingBeginEnd sapUiSmallMarginTopBottom responsiveFlex"\n  alignItems="Center"\n  justifyContent="SpaceBetween"><HBox alignItems="Center"><CheckBox selected="{completed}"  class="sapUiTinyMarginEnd"/><Text text="{task}" class="sapUiTinyMarginEnd lisText" wrapping="true"/><core:Fragment\n           fragmentName="sap.ui.demo.todo.view.fragment.TpPriority"\n           type="XML"/></HBox><HBox alignItems="Center"><core:Icon\n           src="sap-icon://calendar"\n           class="sapUiTinyMarginEnd"\n           size="1.5rem"\n           color="{iconColor}" /><Text \n         text="{\n         path: \'date\',\n        formatter: \'.formatDate\'\n        }"\n         wrapping="false"\n        class="sapUiSmallMarginBeginEnd lisText" /><Button icon="sap-icon://delete" \n          type="Transparent" press=".onDeleteItem"/><Button icon="sap-icon://message-information" \n          type="Transparent" press=".onInfoItem"/></HBox></HBox></CustomListItem></List></FlexBox></VBox></content></Page></App></mvc:View>',
	"sap/ui/demo/todo/view/fragment/InfoCard.fragment.xml":'<core:FragmentDefinition\n\txmlns="sap.m"\n\txmlns:core="sap.ui.core"\n\txmlns:f="sap.f"><Panel class="sapUiSmallMarginEnd border-panel sapUiTinyMarginBottom" width="300px" height="170px"><HBox class="sapUiSmallMargin"><core:Icon\n\t\t\t\t\tsrc="{view>icon}"\n\t\t\t\t\tclass="sapUiTinyMarginEnd"\n\t\t\t\t\tsize="1.5rem"\n\t\t\t\t\tcolor="{view>iconColor}" /><VBox><Title text="{view>title}" level="H4" /><Title text="{view>number}" titleStyle="H1" /><Text text="{view>subtitle}" /></VBox></HBox></Panel></core:FragmentDefinition>',
	"sap/ui/demo/todo/view/fragment/TpPriority.fragment.xml":'<core:FragmentDefinition\n\txmlns="sap.m"\n\txmlns:core="sap.ui.core"\n\txmlns:f="sap.f"><Text text="Alta" class="tpPriorityBoxA tpPriority" visible="{= ${TpPriority} === \'A\' }" /><Text text="Média" class="tpPriorityBoxM tpPriority" visible="{= ${TpPriority} === \'M\' }" /><Text text="Baixa" class="tpPriorityBoxB tpPriority" visible="{= ${TpPriority} === \'B\' }" /></core:FragmentDefinition>'
});
//# sourceMappingURL=Component-preload.js.map
