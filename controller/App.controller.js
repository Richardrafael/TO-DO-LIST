sap.ui.define(["sap/ui/Device","sap/ui/core/mvc/Controller","sap/ui/model/Filter","sap/ui/model/FilterOperator","sap/ui/model/json/JSONModel","sap/base/strings/formatMessage","sap/ui/demo/todo/util/Helper","sap/m/MessageToast"],(e,t,s,o,r,i,a,n)=>{"use strict";return t.extend("sap.ui.demo.todo.controller.App",{onInit(){this.formatter=a;this.aSearchFilters=[];this.aTabFilters=[];const e=new r;this.getView().setModel(e,"view");this.getOwnerComponent().getModel().dataLoaded().then(()=>{this._updateCardData()})},removeCompletedTodos(e){let t=e.length;while(t--){const s=e[t];if(s.completed){e.splice(t,1)}}},_updateCardData(){const e=this.getOwnerComponent().getModel();const t=e.getProperty("/todos")||[];const s=e.getProperty("/itemsCount")||0;const o=this.getView().getModel("view");let r=0;let i=0;let a=0;const n=new Date;n.setHours(0,0,0,0);const l=new Date(n);l.setDate(l.getDate()+1);const c=new Date(l);c.setDate(c.getDate()+1);t.forEach(e=>{if(!e.completed){const t=new Date(e.date);t.setHours(0,0,0,0);if(t.getTime()<n.getTime()){r++}else if(t.getTime()>=n.getTime()&&t.getTime()<l.getTime()){i++}else if(t.getTime()>=l.getTime()&&t.getTime()<c.getTime()){a++}}});const d={overdue:{title:"Atrasadas",number:r,icon:"sap-icon://alert",iconColor:"Negative",subtitle:"Tarefas vencidas"},today:{title:"Para Hoje",number:i,icon:"sap-icon://calendar",iconColor:"Neutral",subtitle:"Tarefas a vencerem hoje"},tomorrow:{title:"Para Amanhã",number:a,icon:"sap-icon://date-time",iconColor:"Positive",subtitle:"Tarefas para o próximo dia"}};o.setProperty("/cardData",d);o.setProperty("/all",s);console.log(s)},getModel(){return this.getView().getModel()},onPress(){try{const e=this.getModel();const t=e.getProperty("/newTask");const s=e.getProperty("/newTpPriority");const o=e.getProperty("/dateDelivery");if(!t){n.show("Necesário informar uma Tarefa.");return}if(!o){n.show("Necesário informar uma Data.");return}if(!s){n.show("Necesário informar um Tipo.");return}const r=this.getTodos().map(e=>Object.assign({},e));console.log(s);r.push({task:t,TpPriority:s,date:o,completed:false});e.setProperty("/todos",r);e.setProperty("/newTask","");e.setProperty("/newTpPriority","");e.setProperty("/dateDelivery","");console.log(r);e.setProperty("/nagali","0");n.show("Tarefa Adicionada");this._updateCardData()}catch(e){console.log(e)}},formatDate:function(e){if(!e)return"";const t=e.split("/");const s=t[0].padStart(2,"0");const o=t[1].padStart(2,"0");const r=t[2].length===2?"20"+t[2]:t[2];return`${o}/${s}/${r}`},onClearCompleted(){const e=this.getTodos().map(e=>Object.assign({},e));this.removeCompletedTodos(e);this.getModel().setProperty("/todos",e);this._updateCardData()},getTodos(){const e=this.getModel();return e&&e.getProperty("/todos")||[]},onUpdateItemsLeftCount(){const e=this.getTodos().filter(e=>e.completed!==true).length;this.getModel().setProperty("/itemsLeftCount",e);this._updateCardData()},onDeleteItem(e){const t=this.getModel();const s=t.getProperty("/todos");const o=e.getSource().getBindingContext().getPath();const r=parseInt(o.split("/").pop(),10);s.splice(r,1);t.setProperty("/todos",s);this._updateCardData()},onSearch(e){const t=this.getModel();this.aSearchFilters=[];this.sSearchQuery=e.getSource().getValue();if(this.sSearchQuery&&this.sSearchQuery.length>0){t.setProperty("/itemsRemovable",false);const e=new s("task",o.Contains,this.sSearchQuery);this.aSearchFilters.push(e)}else{t.setProperty("/itemsRemovable",true)}this._applyListFilters()},onFilter(e){this.aTabFilters=[];this.sFilterKey=e.getParameter("item").getKey();switch(this.sFilterKey){case"active":this.aTabFilters.push(new s("completed",o.EQ,false));break;case"completed":this.aTabFilters.push(new s("completed",o.EQ,true));break;case"all":default:}this._applyListFilters()},_applyListFilters(){const e=this.byId("todoList");const t=e.getBinding("items");t.filter(this.aSearchFilters.concat(this.aTabFilters),"todos");const s=this.getI18NKey(this.sFilterKey,this.sSearchQuery);this.byId("filterToolbar").setVisible(!!s);if(s){this.byId("filterLabel").bindProperty("text",{path:s,model:"i18n",formatter:e=>i(e,[this.sSearchQuery])})}},getI18NKey(e,t){if(!e||e==="all"){return t?"ITEMS_CONTAINING":undefined}else if(e==="active"){return"ACTIVE_ITEMS"+(t?"_CONTAINING":"")}else{return"COMPLETED_ITEMS"+(t?"_CONTAINING":"")}}})});
//# sourceMappingURL=App.controller.js.map