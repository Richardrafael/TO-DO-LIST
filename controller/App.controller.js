sap.ui.define(["sap/ui/Device","sap/ui/core/mvc/Controller","sap/ui/model/Filter","sap/ui/model/FilterOperator","sap/ui/model/json/JSONModel","sap/base/strings/formatMessage","sap/ui/demo/todo/util/Helper","sap/m/MessageToast","sap/m/Dialog","sap/ui/layout/form/SimpleForm"],(e,t,o,s,i,a,r,n,l,c)=>{"use strict";return t.extend("sap.ui.demo.todo.controller.App",{onInit(){this.formatter=r;this.aSearchFilters=[];this.aTabFilters=[];e.resize.attachHandler(this._onDeviceResize,this);const t=new i;this.getView().setModel(t,"view");this.getOwnerComponent().getModel().dataLoaded().then(()=>{this._updateCardData()})},removeCompletedTodos(e){let t=e.length;while(t--){const o=e[t];if(o.completed){e.splice(t,1)}}},onDeleteItem(e){const t=e.getSource().getBindingContext();const o=t.getPath();const s=parseInt(o.split("/").pop(),10);if(!this._oConfirmDialog){this._oConfirmDialog=new sap.m.Dialog({title:"Confirmação",type:"Message",content:new sap.m.Text({text:"Tem certeza que deseja excluir esta tarefa?"}),beginButton:new sap.m.Button({text:"Sim",type:"Emphasized",press:function(){this._deleteTask(s);this._oConfirmDialog.close()}.bind(this)}),endButton:new sap.m.Button({text:"Não",press:function(){this._oConfirmDialog.close()}.bind(this)}),afterClose:function(){}.bind(this)});this.getView().addDependent(this._oConfirmDialog)}else{this._oConfirmDialog.getBeginButton().detachPress();this._oConfirmDialog.getBeginButton().attachPress(function(){this._deleteTask(s);this._oConfirmDialog.close()}.bind(this))}this._oConfirmDialog.open()},_deleteTask:function(e){const t=this.getModel();const o=t.getProperty("/todos");o.splice(e,1);t.setProperty("/todos",o);this._updateCardData()},_updateCardData(){const e=this.getOwnerComponent().getModel();const t=e.getProperty("/todos")||[];const o=e.getProperty("/itemsCount")||0;const s=this.getView().getModel("view");let i=0;let a=0;let r=0;const n=new Date;n.setHours(0,0,0,0);const l=new Date(n);l.setDate(l.getDate()+1);const c=new Date(l);c.setDate(c.getDate()+1);t.forEach(e=>{if(!e.completed){const t=new Date(e.date);t.setHours(0,0,0,0);if(t.getTime()<n.getTime()){i++}else if(t.getTime()>=n.getTime()&&t.getTime()<l.getTime()){a++}else if(t.getTime()>=l.getTime()&&t.getTime()<c.getTime()){r++}}});const d={overdue:{title:"Atrasadas",number:i,icon:"sap-icon://alert",iconColor:"Negative",subtitle:"Tarefas vencidas"},today:{title:"Para Hoje",number:a,icon:"sap-icon://calendar",iconColor:"Neutral",subtitle:"Tarefas a vencerem hoje"},tomorrow:{title:"Para Amanhã",number:r,icon:"sap-icon://date-time",iconColor:"Positive",subtitle:"Tarefas para o próximo dia"}};s.setProperty("/cardData",d);s.setProperty("/all",o);console.log(o)},getModel(){return this.getView().getModel()},onPress(){try{const e=this.getModel();const t=e.getProperty("/newTask");const o=e.getProperty("/newTpPriority");const s=e.getProperty("/dateDelivery");if(!t){n.show("Necesário informar uma Tarefa.");return}if(!s){n.show("Necesário informar uma Data.");return}if(!o){n.show("Necesário informar um Tipo.");return}const i=this.getTodos().map(e=>Object.assign({},e));console.log(o);i.push({task:t,TpPriority:o,date:s,completed:false});e.setProperty("/todos",i);e.setProperty("/newTask","");e.setProperty("/newTpPriority","");e.setProperty("/dateDelivery","");console.log(i);e.setProperty("/nagali","0");n.show("Tarefa Adicionada");this._updateCardData()}catch(e){console.log(e)}},formatDate:function(e){if(!e)return"";const t=e.split("/");const o=t[0].padStart(2,"0");const s=t[1].padStart(2,"0");const i=t[2].length===2?"20"+t[2]:t[2];return`${s}/${o}/${i}`},onClearCompleted(){const e=this.getTodos().map(e=>Object.assign({},e));this.removeCompletedTodos(e);this.getModel().setProperty("/todos",e);this._updateCardData()},getTodos(){const e=this.getModel();return e&&e.getProperty("/todos")||[]},onUpdateItemsLeftCount(){const e=this.getTodos().filter(e=>e.completed!==true).length;this.getModel().setProperty("/itemsLeftCount",e);this._updateCardData()},onSearch(e){const t=this.getModel();this.aSearchFilters=[];this.sSearchQuery=e.getSource().getValue();if(this.sSearchQuery&&this.sSearchQuery.length>0){t.setProperty("/itemsRemovable",false);const e=new o("task",s.Contains,this.sSearchQuery);this.aSearchFilters.push(e)}else{t.setProperty("/itemsRemovable",true)}this._applyListFilters()},onFilter(e){this.aTabFilters=[];this.sFilterKey=e.getParameter("item").getKey();switch(this.sFilterKey){case"active":this.aTabFilters.push(new o("completed",s.EQ,false));break;case"completed":this.aTabFilters.push(new o("completed",s.EQ,true));break;case"all":default:}this._applyListFilters()},_applyListFilters(){const e=this.byId("todoList");const t=e.getBinding("items");t.filter(this.aSearchFilters.concat(this.aTabFilters),"todos");const o=this.getI18NKey(this.sFilterKey,this.sSearchQuery);this.byId("filterToolbar").setVisible(!!o);if(o){this.byId("filterLabel").bindProperty("text",{path:o,model:"i18n",formatter:e=>a(e,[this.sSearchQuery])})}},onInfoItem(e){const t=e.getSource().getBindingContext();if(!this._oInfoDialog){this._oInfoDialog=new l({title:"Detalhes da Tarefa",contentWidth:"400px",contentHeight:"auto",resizable:true,content:[new c({editable:false,layout:"ResponsiveGridLayout",content:[new sap.m.Label({text:"Tarefa"}),new sap.m.Text({text:"{task}"}),new sap.m.Label({text:"Prioridade"}),new sap.m.Text({text:"{TpPriority}"}),new sap.m.Label({text:"Data"}),new sap.m.Text({text:"{path: 'date', formatter: '.formatDate'}"}),new sap.m.Label({text:"Concluída"}),new sap.m.CheckBox({selected:"{completed}",editable:false})]})],beginButton:new sap.m.Button({text:"Fechar",press:function(){this._oInfoDialog.close()}.bind(this)})});this.getView().addDependent(this._oInfoDialog)}this._oInfoDialog.setBindingContext(t);this._oInfoDialog.open()}})});
//# sourceMappingURL=App.controller.js.map