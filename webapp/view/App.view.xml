<mvc:View xmlns:mvc="sap.ui.core.mvc" xmlns:core="sap.ui.core" xmlns="sap.m" xmlns:f="sap.f" controllerName="sap.ui.demo.todo.controller.App" displayBlock="true">
		<App>
			<Page>
							
				<customHeader>
					<f:ShellBar core:require="{ Helper: 'sap/ui/demo/todo/util/Helper' }" 
					title="{i18n>TITLE}"
					 homeIcon="{:= Helper.resolvePath('./img/logo_ui5.png') }" />
				</customHeader>
			
				<content>
					
				
					<f:DynamicPage>
						<f:header>
							<f:DynamicPageHeader pinnable="false">
							
								
							</f:DynamicPageHeader>
						</f:header>
						<f:content>
						
					
<Panel width="auto" class="">
	<Text text="Lista de Tarefas"></Text>
				<Text text="Gerencie o que precisa ser feito uma UI clara e eficiente"></Text>
							<List id="todoList"
								items="{ path: '/todos', events: { change: '.onUpdateItemsLeftCount' } }"
								mode="None"
								growing="true"
								growingScrollToLoad="true"
								showNoData="false"
								showSeparators="None">
								<headerToolbar>
									<OverflowToolbar id="toolbar" class="sapUiSizeCompact" visible="{= !${view>/isMobile} }">
										<ToolbarSpacer />
									<VBox	alignItems="Center" width="100%"		direction="Column" >
									<FlexBox 
									alignItems="Center"
									justifyContent="SpaceBetween"
									width="100%"
									direction="Row" 
									>
							<Input type="Text"  id="addtaskItemInput" value="{/newTask}" placeholder="{i18n>INPUT_PLACEHOLDER}"/>
								<Select
									forceSelection="false"
									selectedKey="{/newTpPriority}"
									items="{
										path: '/ProductCollection',
										sorter: { path: 'Name' }
									}">
									<core:Item key="{cDtypePriority}" text="{Name}" />
								</Select>
								<Input type="Date" id="dateDelivery" value="{/dateDelivery}" placeholder="{i18n>INPUT_PLACEHOLDER}"/>
								<Button text="Adicionar"
								 icon="sap-icon://add"
								 press=".onPress"
								 type="Emphasized"
								 >
								</Button>
									</FlexBox>
									<SegmentedButton selectedKey="all" selectionChange=".onFilter" class="sapMSegmentedButtonNoAutoWidth">
											<items>
												<SegmentedButtonItem text="{i18n>LABEL_ALL}" key="all"/>
												<SegmentedButtonItem text="{i18n>LABEL_ACTIVE}" key="active"/>
												<SegmentedButtonItem text="{i18n>LABEL_COMPLETED}" key="completed"/>
											</items>
										</SegmentedButton>
										<!-- <Button id="clearCompleted" enabled="{/itemsRemovable}" icon="sap-icon://delete" text="{i18n>CLEAR_COMPLETED}" press=".onClearCompleted"/> -->
			      	</VBox>
										
									</OverflowToolbar>
								</headerToolbar>
								<infoToolbar>
									<OverflowToolbar
										id="filterToolbar"
										visible="false"
										active="false">
										<Label id="filterLabel"/>
									</OverflowToolbar>
								</infoToolbar>
								<CustomListItem>
									<HBox>
										<CheckBox selected="{completed}"  />
										<VBox  width="auto"  justifyContent="Center" direction="Row" height="3rem">
											<Text text="{task}"/>
											<Text text="{TpPriority}"/>
											<Text text="{date}"/>
										</VBox>
									</HBox>
									<customData>
										<core:CustomData key="todo-item-completed" value="{= String(${completed})}" writeToDom="true" />
									</customData>
								</CustomListItem>
							</List>
</Panel>
						</f:content>
					</f:DynamicPage>
				</content>

				<!-- <footer>
					<OverflowToolbar id="toolbar-footer" visible="{= !!${view>/isMobile} }">
						<SegmentedButton selectedKey="all" selectionChange=".onFilter" class="sapMSegmentedButtonNoAutoWidth">
							<items>
								<SegmentedButtonItem text="All" key="all"/>
								<SegmentedButtonItem text="Active" key="active"/>
								<SegmentedButtonItem text="Completed" key="completed"/>
							</items>
						</SegmentedButton>
						<ToolbarSpacer />
						<Button id="clearCompleted-footer" enabled="{/itemsRemovable}" icon="sap-icon://delete" text="{i18n>CLEAR_COMPLETED}" press=".onClearCompleted"/>
					</OverflowToolbar>
				</footer> -->

			</Page>
		</App>
</mvc:View>
